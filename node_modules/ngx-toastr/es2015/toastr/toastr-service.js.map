{"version":3,"sources":["../../../../src/lib/toastr/toastr-service.ts"],"names":[],"mappings":"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","file":"toastr-service.js","sourceRoot":"","sourcesContent":["import { Injectable, Injector, ComponentRef, Inject, SecurityContext } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { GlobalConfig, IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastContainerDirective } from './toast-directive';\nimport { TOAST_CONFIG } from './toast-token';\nimport { Toast } from './toast-component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface ActiveToast {\n  toastId?: number;\n  message?: string;\n  portal?: ComponentRef<any>;\n  toastRef: ToastRef<any>;\n  onShown?: Observable<any>;\n  onHidden?: Observable<any>;\n  onTap?: Observable<any>;\n  onAction?: Observable<any>;\n}\n\n\nexport class ToastrService {\n  private index = 0;\n  private previousToastMessage?: string;\n  currentlyActive = 0;\n  toasts: ActiveToast[] = [];\n  overlayContainer: ToastContainerDirective;\n\n  constructor(\n     public toastrConfig: GlobalConfig,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n  ) {\n    function use<T>(source: T, defaultValue: T): T {\n      return toastrConfig && source !== undefined ? source : defaultValue;\n    }\n    this.toastrConfig = this.applyConfig(toastrConfig);\n    // Global\n    this.toastrConfig.maxOpened = use(this.toastrConfig.maxOpened, 0);\n    this.toastrConfig.autoDismiss = use(this.toastrConfig.autoDismiss, false);\n    this.toastrConfig.newestOnTop = use(this.toastrConfig.newestOnTop, true);\n    this.toastrConfig.preventDuplicates = use(this.toastrConfig.preventDuplicates, false);\n    if (!this.toastrConfig.iconClasses) {\n      this.toastrConfig.iconClasses = {};\n    }\n    this.toastrConfig.iconClasses.error = this.toastrConfig.iconClasses.error || 'toast-error';\n    this.toastrConfig.iconClasses.info = this.toastrConfig.iconClasses.info || 'toast-info';\n    this.toastrConfig.iconClasses.success = this.toastrConfig.iconClasses.success || 'toast-success';\n    this.toastrConfig.iconClasses.warning = this.toastrConfig.iconClasses.warning || 'toast-warning';\n\n    // Individual\n    this.toastrConfig.timeOut = use(this.toastrConfig.timeOut, 5000);\n    this.toastrConfig.closeButton = use(this.toastrConfig.closeButton, false);\n    this.toastrConfig.extendedTimeOut = use(this.toastrConfig.extendedTimeOut, 1000);\n    this.toastrConfig.progressBar = use(this.toastrConfig.progressBar, false);\n    this.toastrConfig.enableHtml = use(this.toastrConfig.enableHtml, false);\n    this.toastrConfig.toastClass = use(this.toastrConfig.toastClass, 'toast');\n    this.toastrConfig.positionClass = use(this.toastrConfig.positionClass, 'toast-top-right');\n    this.toastrConfig.titleClass = use(this.toastrConfig.titleClass, 'toast-title');\n    this.toastrConfig.messageClass = use(this.toastrConfig.messageClass, 'toast-message');\n    this.toastrConfig.tapToDismiss = use(this.toastrConfig.tapToDismiss, true);\n    this.toastrConfig.toastComponent = use(this.toastrConfig.toastComponent, Toast);\n    this.toastrConfig.onActivateTick = use(this.toastrConfig.onActivateTick, false);\n  }\n  /** show toast */\n  show(message?: string, title?: string, override?: IndividualConfig, type = '') {\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message?: string, title?: string, override?: IndividualConfig) {\n    const type = this.toastrConfig.iconClasses!.success || '';\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message?: string, title?: string, override?: IndividualConfig) {\n    const type = this.toastrConfig.iconClasses!.error || '';\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message?: string, title?: string, override?: IndividualConfig) {\n    const type = this.toastrConfig.iconClasses!.info || '';\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message?: string, title?: string, override?: IndividualConfig) {\n    const type = this.toastrConfig.iconClasses!.warning || '';\n    return this._buildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive <= +this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: IndividualConfig = {}) {\n    function use<T>(source: T, defaultValue: T): T {\n      return override && source !== undefined ? source : defaultValue;\n    }\n    const current: GlobalConfig = { ...this.toastrConfig };\n    current.closeButton = use(override.closeButton, current.closeButton);\n    current.extendedTimeOut = use(override.extendedTimeOut, current.extendedTimeOut);\n    current.progressBar = use(override.progressBar, current.progressBar);\n    current.timeOut = use(override.timeOut, current.timeOut);\n    current.enableHtml = use(override.enableHtml, current.enableHtml);\n    current.toastClass = use(override.toastClass, current.toastClass);\n    current.positionClass = use(override.positionClass, current.positionClass);\n    current.titleClass = use(override.titleClass, current.titleClass);\n    current.messageClass = use(override.messageClass, current.messageClass);\n    current.tapToDismiss = use(override.tapToDismiss, current.tapToDismiss);\n    current.toastComponent = use(override.toastComponent, current.toastComponent);\n    current.onActivateTick = use(override.onActivateTick, current.onActivateTick);\n    return current;\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns null if toast is duplicate and preventDuplicates == True\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    if (message && this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\n      return null;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage: string | SafeHtml | undefined | null = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    const ins: ActiveToast = {\n      toastId: this.index,\n      message,\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterActivate(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n    };\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    ins.portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [TOAST_CONFIG, ] }, ]},\n{type: Overlay, },\n{type: Injector, },\n{type: DomSanitizer, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
{"version":3,"sources":["../../../src/lib/toastr/toastr-module.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,QAAQ,EAER,QAAQ,EACR,QAAQ,GACT,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAE/C,OAAO,EAAE,KAAA,EAAM,MAAO,mBAAA,CAAoB;AAC1C,OAAO,EAAE,YAAA,EAAa,MAAO,eAAA,CAAgB;AAC7C,OAAO,EAAE,aAAA,EAAc,MAAO,kBAAA,CAAmB;AAEjD,OAAO,EAAE,gBAAA,EAAiB,MAAO,8BAAA,CAA+B;AAChE,OAAO,EAAE,OAAA,EAAQ,MAAO,oBAAA,CAAqB;AAI7C;IACE,sBAAc,YAA0B;QACtC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,gGAAgG,CAAC,CAAC;QACpH,CAAC;IACH,CAAC;IACM,oBAAO,GAAd,UAAe,MAAqB;QAClC,MAAM,CAAC;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE;gBAC3C,gBAAgB;gBAChB,OAAO;gBACP,aAAa;aACd;SACF,CAAC;IACJ,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,KAAK,CAAC;oBAChB,YAAY,EAAE,CAAC,KAAK,CAAC;oBACrB,eAAe,EAAE,CAAC,KAAK,CAAC;iBACzB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;KAC3E,EAF6F,CAE7F,CAAC;IACF,mBAAC;CA7BD,AA6BC,IAAA;SA7BY,YAAY","file":"toastr-module.js","sourceRoot":"","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  SkipSelf,\n  Optional,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Toast } from './toast-component';\nimport { TOAST_CONFIG } from './toast-token';\nimport { ToastrService } from './toastr-service';\nimport { GlobalConfig } from './toastr-config';\nimport { OverlayContainer } from '../overlay/overlay-container';\nimport { Overlay } from '../overlay/overlay';\n\n\n\nexport class ToastrModule {\n  constructor(  parentModule: ToastrModule) {\n    if (parentModule) {\n      throw new Error('ToastrModule is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(config?: GlobalConfig): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: config },\n        OverlayContainer,\n        Overlay,\n        ToastrService,\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  exports: [Toast],\n  declarations: [Toast],\n  entryComponents: [Toast],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ToastrModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
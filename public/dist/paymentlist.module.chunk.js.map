{"version":3,"sources":["C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.component.html","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.component.ts","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.module.ts","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.routing.ts"],"names":[],"mappings":"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","file":"paymentlist.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"purple\\\">\\n                        <i class=\\\"material-icons\\\">assignment</i>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4 class=\\\"card-title\\\">Payments List</h4>\\n                        <div class=\\\"toolbar\\\">\\n                            <!--        Here you can write extra buttons/actions for the toolbar              -->\\n                        </div>\\n                        <div class=\\\"material-datatables table-responsive\\\">\\n                            <table id=\\\"datatables\\\" class=\\\"table table-striped table-no-bordered table-hover\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Owner details</th>\\n                                        <th>Tenant Name</th>\\n                                        <th>Amount</th>\\n                                        <th>Payment Status</th>\\n                                        <th>Flarow transfer status</th>\\n                                    </tr>\\n                                </thead>\\n                                <tfoot>\\n                                    <tr>\\n                                        <th>Owner details</th>\\n                                        <th>Tenant Name</th>\\n                                        <th>Amount</th>\\n                                        <th>Payment Status</th>\\n                                        <th>Flarow transfer status</th>\\n                                    </tr>\\n                                </tfoot>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let row of payments\\\">\\n                                        <td>{{row.ownerName}}\\n                                            <br/> Bank: {{row.bankName}}\\n                                            <br/> Payee: {{row.holderName}}\\n                                            <br/> Account No.: {{row.accountNumber}}\\n                                            <br/> IFSC: {{row.ifsc}}\\n                                            <br/> Account Type: {{row.accountType}}</td>\\n                                        <td>{{row.tenantName}}</td>\\n                                        <td>{{row.amount}}</td>\\n\\n                                        <td>\\n                                            <div *ngIf=\\\"row.paymentStatus == 0\\\">\\n                                                Not Paid\\n                                            </div>\\n                                            <div *ngIf=\\\"row.paymentStatus == 1\\\">\\n                                                Received\\n                                            </div>\\n                                            <div *ngIf=\\\"row.paymentStatus == 2\\\">\\n                                                Pending Verification\\n                                            </div>\\n                                            <button class=\\\"btn btn-simple btn-warning btn-icon edit\\\" rel=\\\"tooltip\\\" title=\\\"Edit\\\" data-placement=\\\"left\\\" (click)=\\\"onChange(row.id,'P')\\\">\\n                                                <i class=\\\"material-icons\\\">edit_mode</i>\\n                                            </button>\\n                                        </td>\\n                                        <td>\\n                                            <div *ngIf=\\\"row.flarowStatus == 0\\\">\\n                                                Pending\\n                                            </div>\\n                                            <div *ngIf=\\\"row.flarowStatus == 1\\\">\\n                                                Paid\\n                                            </div>\\n                                            <div *ngIf=\\\"row.flarowStatus == 2\\\">\\n                                                Pending Verification\\n                                            </div>\\n                                            <button class=\\\"btn btn-simple btn-warning btn-icon edit\\\" rel=\\\"tooltip\\\" title=\\\"Edit\\\" data-placement=\\\"left\\\" (click)=\\\"onChange(row.id,'F')\\\">\\n                                                <i class=\\\"material-icons\\\">edit_mode</i>\\n                                            </button>\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <!-- end content-->\\n                </div>\\n                <!--  end card  -->\\n            </div>\\n            <!-- end col-md-12 -->\\n        </div>\\n        <!-- end row -->\\n    </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" id=\\\"statusModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"otpModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"otpModalLabel\\\">Change Status</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"col-sm-5 col-sm-offset-1\\\">\\n                        <div class=\\\"form-group label-floating\\\">\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" [value]=\\\"1\\\" [checked]=\\\"paymentStatusVal===1\\\" (change)=\\\"onStatusChange(1)\\\" name=\\\"status\\\"> Payment received\\n                                </label>\\n                            </div>\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" [value]=\\\"2\\\" [checked]=\\\"paymentStatusVal===2\\\" (change)=\\\"onStatusChange(2)\\\" name=\\\"status\\\"> Payment rejected\\n                                </label>\\n                            </div>\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" [value]=\\\"3\\\" [checked]=\\\"paymentStatusVal===3\\\" (change)=\\\"onStatusChange(3)\\\" name=\\\"status\\\"> Payment not received\\n                                </label>\\n                            </div>\\n                            <div class=\\\"radio\\\">\\n                                <label>\\n                                    <input type=\\\"radio\\\" [value]=\\\"4\\\" [checked]=\\\"paymentStatusVal===4\\\" (change)=\\\"onStatusChange(4)\\\" name=\\\"status\\\">Transferred to Owner \\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                    <button type=\\\"button\\\" [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.component.html\n// module id = ../../../../../angular/app/paymentlist/paymentlist.component.html\n// module chunks = paymentlist.module","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormBuilder, FormGroup, Validators, FormControl, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute, } from '@angular/router';\n\ndeclare interface DataTable {\n  headerRow: string[];\n  footerRow: string[];\n  dataRows: string[][];\n}\n\ndeclare const $: any;\n\n@Component({\n    selector: 'paymentlist-list',\n    templateUrl: 'paymentlist.component.html'\n})\n\nexport class PaymentlistComponent implements OnInit, AfterViewInit {\n    public dataTable: DataTable;\n    private userId: any;\n    public payments: any;\n    public paymentStatusVal: any;\n    private paymentId : any;\n    private statusType : any;\n\n    constructor(private router: Router, private http: Http, private toastr: ToastrService,) { \n        this.userId = localStorage.getItem(\"userId\");\n        \n        this.http.get('/api/payment')\n        .toPromise()\n        .then(result => {\n            this.payments = result.json().data.payments;\n        });\n\n        setTimeout(\n            function(){\n                $(function(){\n                     const table = $('#datatables').DataTable({\n                        'pagingType': 'full_numbers',\n                        'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'All']],\n                        responsive: true,\n                        language: {\n                        search: '_INPUT_',\n                        searchPlaceholder: 'Search records',\n                        }\n                    });\n                });\n\n            }, 1000\n        );        \n    }  \n    ngOnInit() { \n        $.material.options.autofill = true;\n        $.material.init();\n    }\n\n    ngAfterViewInit() {\n        //  Activate the tooltips\n        $('[rel=\"tooltip\"]').tooltip();\n    }\n\n    onChange(payId, statusType){\n        this.paymentId = payId;\n        this.statusType = statusType;\n\n        $('#statusModal').modal({\n            backdrop: 'static',\n            keyboard: false\n        });\n    }\n\n    onStatusChange(stat){\n        this.paymentStatusVal = stat;\n    }\n\n    onSubmit(form:NgForm){\n        var data = {\n            paymentStatus : '',\n            id : '',\n            flarowStatus : ''\n        };\n        data.id = this.paymentId;\n        if(this.statusType === 'P'){\n            data.paymentStatus = this.paymentStatusVal;\n        }else{\n            data.flarowStatus = this.paymentStatusVal;\n        }\n        \n        this.http.post('/api/paymentStatus', data)\n            .toPromise()\n            .then(result => {\n                this.toastr.success('Status updated', 'Flarow!');\n            });\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { PaymentlistComponent } from './paymentlist.component';\nimport { PaymentlistRoutes } from './paymentlist.routing';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(PaymentlistRoutes),\n        FormsModule\n    ],\n    declarations: [PaymentlistComponent]\n})\n\nexport class PaymentlistModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.module.ts","import { Routes } from '@angular/router';\n\nimport { PaymentlistComponent } from './paymentlist.component';\n\nexport const PaymentlistRoutes: Routes = [\n    {\n\n      path: '',\n      children: [ {\n        path: '',\n        component: PaymentlistComponent\n    }]\n}\n];\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/paymentlist/paymentlist.routing.ts"],"sourceRoot":"webpack:///"}
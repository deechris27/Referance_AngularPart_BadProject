{"version":3,"sources":["C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.component.html","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.component.ts","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.module.ts","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.routing.ts"],"names":[],"mappings":"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","file":"forgetpwd.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\n    <nav class=\\\"navbar navbar-primary navbar-transparent navbar-absolute\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"navbar-header\\\">\\n                <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menu\\\">\\n                    <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                    <span class=\\\"icon-bar\\\"></span>\\n                </button>\\n                <a class=\\\"navbar-brand\\\" href=\\\"/#/home\\\">FLAROW</a>\\n            </div>\\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"menu\\\">\\n                <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                    <li class=\\\"active\\\">\\n                        <a href=\\\"/#/login\\\">\\n                            <i class=\\\"material-icons\\\">fingerprint</i>Login\\n                        </a>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </nav>\\n    <div class=\\\"full-page login-page\\\" filter-color=\\\"black\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\n                        <form #f=\\\"ngForm\\\">\\n                            <div class=\\\"card card-login card-hidden\\\">\\n                                <div class=\\\"card-header text-center\\\" data-background-color=\\\"red\\\">\\n                                    <i class=\\\"fa fa-shield fa-3x\\\" aria-hidden=\\\"true\\\"></i>\\n                                    <h4 class=\\\"card-title\\\">Forget Password</h4>\\n                                </div>\\n                                <div class=\\\"card-content\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\">\\n                                            <i class=\\\"material-icons\\\">email</i>\\n                                        </span>\\n                                        <div class=\\\"form-group label-floating\\\">\\n                                            <label class=\\\"control-label\\\">Email address</label>\\n                                            <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\">\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"present==1\\\">\\n                                        <span class=\\\"input-group-addon\\\">\\n                                            <i class=\\\"material-icons\\\">security</i>\\n                                        </span>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-7 col-sm-6\\\">\\n                                                <div class=\\\"form-group label-floating\\\">\\n                                                    <label class=\\\"control-label\\\">OTP</label>\\n                                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"uname\\\" name=\\\"uname\\\" [ngModel]=\\\"name\\\" required #uname=\\\"ngModel\\\">\\n                                                    <small [hidden]=\\\"uname.valid || (uname.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                                        Please enter your otp\\n                                                    </small>\\n                                                </div>\\n                                            </div>\\n                                            <!-- <div class=\\\"col-md-7 col-sm-6\\\">\\n                                                <div class=\\\"form-group label-floating\\\">\\n                                                    <button class=\\\"btn btn-rose btn-simple btn-wd btn-lg pull-right\\\" (click)=\\\"resend()\\\">\\n                                                        Resend OTP?\\n                                                    </button>\\n                                                </div>\\n                                            </div> -->\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"input-group\\\" *ngIf=\\\"present==1\\\">\\n                                        <span class=\\\"input-group-addon\\\">\\n                                            <i class=\\\"material-icons\\\">lock_outline</i>\\n                                        </span>\\n                                        <div class=\\\"form-group label-floating\\\">\\n                                            <label class=\\\"control-label\\\">New Password</label>\\n                                            <input type=\\\"password\\\" id=\\\"password\\\" \\n                                            name=\\\"password\\\" ngModel class=\\\"form-control\\\" \\n                                            [(ngModel)]=\\\"pwd\\\" minlength=\\\"8\\\" #password=\\\"ngModel\\\" required>\\n                                            <small [hidden]=\\\"password.valid || (password.pristine && !f.submitted)\\\" \\n                                            class=\\\"text-danger\\\">\\n                                                    Password is invalid\\n                                            </small>\\n                                        </div>\\n                                    </div>                                    \\n                                </div>\\n                                <div class=\\\"footer text-center\\\">\\n                                    <button [disabled]=\\\"!f.valid\\\" (click)=\\\"onSubmit(f)\\\" class=\\\"btn btn-rose btn-simple btn-wd btn-lg\\\">Submit</button>\\n                                    <a href=\\\"#/register\\\" class=\\\"btn btn-rose btn-simple btn-wd btn-lg\\\">Sign up</a>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"full-page-background\\\" style=\\\"background-image: url(//studphotos.s3.amazonaws.com/img/apartment.jpg) \\\"></div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.component.html\n// module id = ../../../../../angular/app/forgetpwd/forgetpwd.component.html\n// module chunks = forgetpwd.module","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\n\ndeclare var $: any;\n@Component({\n    selector: 'app-fpwd-cmp',\n    templateUrl: './forgetpwd.component.html'\n})\n\nexport class ForgetPwdComponent implements OnInit {\n\n    data: any;\n    name:any;\n    postData:any;\n    present:any;\n\n    constructor(private http: Http, private router: Router, private toastr: ToastrService) {}    \n\n    ngOnInit() {\n        setTimeout(function() {\n            $('.card').removeClass('card-hidden');\n        }, 700);        \n    }\n\n    onSubmit(form: NgForm){\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n\n        console.log(form.value.uname);\n\n        if(form.value.uname !== undefined && form.value.uname !== null){\n\n            this.postData = {\n                email:form.value.email,\n                otp:form.value.uname,\n                password:form.value.password\n            }\n        \n            this.http.post('/api/auth/password/reset', this.postData, options)\n                .toPromise()\n                .then(response => {    \n                    if(response.json().data != undefined){\n                        this.toastr.success('Password reset done, Please login with new password ', 'Flarow!');\n                        this.router.navigate(['/login']);\n                    }else{\n                        this.toastr.error('Invalid OTP ', 'Flarow!');\n                    }\n            });\n\n        }else{\n\n            this.postData = {\n                email:form.value.email\n            }\n        \n            this.http.post('/api/checkUser', this.postData, options)\n                .toPromise()\n                .then(response => {    \n                    this.present = response.json().data.result;\n                    if(this.present == 0){\n                        this.toastr.error('Email Id doesnt exists ', 'Flarow!');\n                    }else{\n                        let data = {\n                            email:form.value.email\n                        };\n\n                        this.http.post('/api/sendByEmail', data, options)\n                        .toPromise()\n                        .then(response => { \n\n                        });                        \n                    }\n            });\n        }\n    }\n\n    resend(){\n        this.data = {\n            name:localStorage.getItem('lname'),\n            mobile:localStorage.getItem('lmobile'),\n            email:localStorage.getItem('lemail'),\n            password:localStorage.getItem('lpwd'),\n            type:localStorage.getItem('ltype'),\n            otp:0\n        }\n\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        this.http.post('/api/reSend', this.data, options)\n        .toPromise()\n        .then(response => {\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MdModule } from '../md/md.module';\n\nimport { ForgetPwdComponent } from './forgetpwd.component';\nimport { ForgetPwdRoutes } from './forgetpwd.routing';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ForgetPwdRoutes),\n        FormsModule,\n        MdModule\n    ],\n    declarations: [ForgetPwdComponent]\n})\n\nexport class ForgetPwdModule {}\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.module.ts","import { Routes } from '@angular/router';\n\nimport { ForgetPwdComponent } from './forgetpwd.component';\n\nexport const ForgetPwdRoutes: Routes = [\n    {\n\n      path: '',\n        children: [ {\n            path: '',\n            component: ForgetPwdComponent\n        }]\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/forgetpwd/forgetpwd.routing.ts"],"sourceRoot":"webpack:///"}
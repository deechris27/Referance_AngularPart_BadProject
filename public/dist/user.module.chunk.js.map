{"version":3,"sources":["C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.component.css","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.component.html","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.component.ts","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.module.ts","C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.routing.ts"],"names":[],"mappings":"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","file":"user.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".square-box{\\n    width:200px;\\n    height: 125px;\\n}\\n\\n#profile-input { display: none; }\\n\\n.profile-input-hide {\\n     position: relative;\\n     left: -6em;\\n}\\n\\n.bring-forward {\\n     z-index:10;\\n}\\n \\nimg {\\n  background-image: url(\\\"//studphotos.s3.amazonaws.com/img/800x500.jpg\\\");\\n  overflow: hidden;\\n}\\n\\nimg:before {\\n  content: \\\" \\\";\\n  font-size: 1000px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.component.css\n// module id = ../../../../../angular/app/userpage/user.component.css\n// module chunks = user.module","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-icon\\\" data-background-color=\\\"rose\\\">\\n                        <i class=\\\"material-icons\\\">perm_identity</i>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4 class=\\\"card-title\\\">Edit Profile -\\n                            <small class=\\\"category\\\">Complete your profile</small>\\n                        </h4>\\n                        <form (ngSubmit)=\\\"profile(f);\\\" #f=\\\"ngForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">First Name</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fname\\\" \\n                                        name=\\\"fname\\\" [(ngModel)]=\\\"property.fname\\\" #fname=\\\"ngModel\\\">\\n                                        <!-- <small [hidden]=\\\"fname.valid || (fname.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                                First Name is required\\n                                        </small> -->\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">Last Name</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lname\\\"\\n                                        name=\\\"lname\\\" [(ngModel)]=\\\"property.lname\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">Address</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\"\\n                                        name=\\\"address\\\" [(ngModel)]=\\\"property.address\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-4\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">City</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\"\\n                                        name=\\\"city\\\" [(ngModel)]=\\\"property.city\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">State</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"state\\\"\\n                                        name=\\\"state\\\" [(ngModel)]=\\\"property.state\\\">\\n                                    </div>\\n                                </div>                                \\n                                <div class=\\\"col-md-4\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">Country</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"country\\\"\\n                                        name=\\\"country\\\" [(ngModel)]=\\\"property.country\\\">\\n                                    </div>\\n                                </div>                                \\n                                <div class=\\\"col-md-4\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">Postal Code</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zip\\\"\\n                                        name=\\\"zip\\\" [(ngModel)]=\\\"property.zip\\\" #zip=\\\"ngModel\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-4\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">Mobile Number</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mobile\\\"\\n                                        name=\\\"mobile\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" \\n                                        [(ngModel)]=\\\"property.mobile\\\"\\n                                        #mobile=\\\"ngModel\\\" readonly>\\n                                        <small [hidden]=\\\"mobile.valid || (mobile.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                                Mobile number is invalid\\n                                        </small>\\n                                    </div>\\n                                </div>    \\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-4\\\">\\n                                        <div class=\\\"form-group label-floating\\\">\\n                                            <label class=\\\"control-label\\\">Email address</label>\\n                                            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                                            name=\\\"email\\\" [(ngModel)]=\\\"property.email\\\" #email=\\\"ngModel\\\"\\n                                            pattern=\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\\\" readonly>\\n                                            <small [hidden]=\\\"email.valid || (email.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                                    Email id is invalid\\n                                            </small>\\n                                        </div>\\n                                    </div>\\n                                </div>                                                            \\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>About Me</label>\\n                                        <div class=\\\"form-group label-floating\\\">\\n                                            <label class=\\\"control-label\\\"></label>\\n                                            <textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"about\\\"\\n                                            name=\\\"about\\\" [(ngModel)]=\\\"property.about\\\" #about=\\\"ngModel\\\"></textarea>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"updUser\\\">\\n                                <div class=\\\"col-md-5\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <label class=\\\"control-label\\\">Property Status</label>\\n                                        <span *ngIf=\\\"property.status == 'undefined' \\\">\\n                                            <button class=\\\"btn btn-primary btn-round btn-xs\\\">Not yet uploaded</button>\\n                                        </span>\\n                                        <span *ngIf=\\\"property.status == 0 \\\">\\n                                            <button class=\\\"btn btn-warning btn-round btn-xs\\\">Inactive</button>\\n                                        </span>    \\n                                        <span *ngIf=\\\"property.status == 1 \\\">\\n                                            <button class=\\\"btn btn-success btn-round btn-xs\\\">Active</button>\\n                                        </span>                                      \\n                                    </div>\\n                                </div> \\n                                <div class=\\\"col-md-5\\\">\\n                                    <div class=\\\"form-group label-floating\\\">\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                    <input type=\\\"radio\\\" [value]=\\\"0\\\" \\n                                                    [checked]=\\\"property.status===0\\\"\\n                                                    (change)=\\\"onStatusChange(0)\\\"\\n                                                    name=\\\"pstatus\\\">\\n                                                    Inactive\\n                                                </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                    <input type=\\\"radio\\\" [value]=\\\"1\\\" \\n                                                    [checked]=\\\"property.status===1\\\"\\n                                                    (change)=\\\"onStatusChange(1)\\\"\\n                                                    name=\\\"pstatus\\\">\\n                                                    Active\\n                                                </label>\\n                                        </div>                                           \\n                                    </div>\\n                                </div>\\n                            </div>                             \\n                            <button  *ngIf=\\\"!updUser\\\" type=\\\"submit\\\" class=\\\"btn btn-rose pull-right\\\">Update Profile</button>\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </form>\\n                        <button *ngIf=\\\"updUser\\\" (click)=\\\"updateUserStatus()\\\" \\n                        class=\\\"btn btn-rose pull-right\\\">Update Status</button>\\n                        <div class=\\\"clearfix\\\"></div>                        \\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card card-profile\\\">\\n                    <div class=\\\"card-avatar\\\">\\n                        <a href=\\\"#pablo\\\">\\n                            <img class=\\\"img\\\" #prfPreview src=\\\"http://studphotos.s3.amazonaws.com/img/400x400.jpg\\\">\\n                        </a>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <h4 class=\\\"card-title\\\">{{property.fname}} {{property.lname}}</h4>\\n                        <p class=\\\"description\\\">\\n                            {{property.about}}\\n                        </p>\\n                        <input #profileinput class=\\\"ng-hide\\\" id=\\\"profile-input\\\" name=\\\"profile-input\\\" input-files=\\\"files\\\"\\n                        type=\\\"file\\\"  accept=\\\"image/*\\\"\\n                        (change)=\\\"readUrl($event)\\\"/>\\n                        \\n                        <label for=\\\"profile-input\\\" class=\\\"btn btn-rose pull-right\\\" #uploadButton id=\\\"uploadButton\\\"\\n                        >Upload Photo</label>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.component.html\n// module id = ../../../../../angular/app/userpage/user.component.html\n// module chunks = user.module","import { Component, ElementRef, Input, ViewChild, OnInit } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators, FormControl, NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\ndeclare var $: any;\ndeclare interface Property {\n    fname?: string;\n    lname?: string;\n    address?: string,\n    city?: string;\n    state?: string;\n    country?: string;\n    zip?: string;\n    mobile?: string;\n    email?: string;\n    about?: string;\n    pImage?: any;\n    status?: any;\n}\n\n@Component({\n    selector: 'app-user-cmp',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent implements OnInit {\n\n    public property: Property;\n    private imageId: any;\n    private userId: any;\n    public updUser = false;\n    public readOly = false;\n\n    constructor(private http: Http,\n        private el: ElementRef,\n        private toastr: ToastrService,\n        private actrouter: ActivatedRoute\n    ) { }\n\n    @ViewChild(\"profileinput\") fileInput;\n    @ViewChild(\"prfPreview\") prfPreview;\n    @ViewChild(\"uploadButton\") uploadButton;\n\n    ngOnInit() {\n        $.material.options.autofill = true;\n        $.material.init();\n\n        this.property = {\n            fname: '',\n            lname: '',\n            address: '',\n            city: '',\n            state: '',\n            country: '',\n            zip: '',\n            mobile: '',\n            email: '',\n            about: '',\n            status: ''\n        }\n\n        if (this.actrouter.snapshot.paramMap.get('id') != null\n            && this.actrouter.snapshot.paramMap.get('updId') != null) {\n            this.userId = this.actrouter.snapshot.paramMap.get('id');\n            this.updUser = true;\n        } else if (this.actrouter.snapshot.paramMap.get('id') != null) {\n            this.userId = this.actrouter.snapshot.paramMap.get('id');\n        }\n        else {\n            this.userId = localStorage.getItem(\"userId\");\n        }\n\n        this.http.get('/api/getProfile/' + this.userId)\n            .toPromise()\n            .then(result => {\n                var user = result.json().data.user;\n                if (user !== undefined) {\n                    this.property.fname = user.fname;\n                    this.property.lname = user.lname;\n                    this.property.email = user.email;\n                    this.property.mobile = user.phone;\n                    this.property.address = user.address;\n                    this.property.city = user.city;\n                    this.property.state = user.state;\n                    this.property.country = user.country;\n                    this.property.zip = user.zip;\n                    this.property.about = user.about;\n                    this.property.status = user.status;\n                    let imgPrv = this.prfPreview.nativeElement;\n                    imgPrv.src = \"http://studphotos.s3.amazonaws.com/\" + this.userId + \".jpg\";\n                }\n                if(!this.updUser){\n                    this.property.email = localStorage.getItem(\"email\");\n                    this.property.mobile = localStorage.getItem(\"mobile\");\n                }\n            });\n    }\n\n    readUrl(event) {\n        if (event.target.files && event.target.files[0]) {\n            var reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                let imgPrv = this.prfPreview.nativeElement;\n                imgPrv.src = event.target.result;\n            }\n\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    }\n\n    profile(form: NgForm) {\n        var data = {\n            fname: form.value.fname,\n            lname: form.value.lname,\n            userId: localStorage.getItem(\"userId\"),\n            address: form.value.address,\n            city: form.value.city,\n            state: form.value.state,\n            country: form.value.country,\n            zip: form.value.zip,\n            phone: form.value.mobile,\n            email: form.value.email,\n            about: form.value.about\n        }\n\n        this.http.post('/api/addProfile/' + data.userId, data)\n            .toPromise()\n            .then(result => {\n                this.imageId = result.json().data.data;\n\n                if (!result.json().errors) {\n\n                    this.toastr.success('Profile updated', 'Flarow!');\n\n                    this.imageId = data.userId;\n                    let fileBrowser = this.fileInput.nativeElement;\n\n                    if (fileBrowser.files.length === 0) { return; };\n\n                    let files: FileList = fileBrowser.files;\n\n                    const formData = new FormData();\n                    for (let i = 0; i < files.length; i++) {\n                        formData.append(\"image\", files[i]);\n                        formData.append(\"name\", this.imageId);\n                    }\n\n                    this.http\n                        .post('/api/s3upload', formData)\n                        .subscribe(result => {\n                            let imgPrv = this.prfPreview.nativeElement;\n                        });\n                }\n\n            });\n    }\n\n    updateUserStatus() {\n        var data = {\n            status: this.property.status\n        };\n\n        this.http.post('/api/updTenantStatus/' + this.userId, data)\n            .toPromise()\n            .then(result => {\n                this.toastr.success('User status updated', 'Flarow!');\n            });\n    }\n\n    onStatusChange(stat) {\n        this.property.status = stat;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { UserComponent } from './user.component';\nimport { UserRoutes } from './user.routing';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(UserRoutes),\n        FormsModule\n    ],\n    declarations: [UserComponent]\n})\n\nexport class UserModule {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.module.ts","import { Routes } from '@angular/router';\n\nimport { UserComponent } from './user.component';\n\nexport const UserRoutes: Routes = [\n    {\n\n      path: '',\n      children: [ {\n        path: '',\n        component: UserComponent\n    }]\n}\n];\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/doraised/Downloads/anamik17-flarow-c1be5e135b70/anamik17-flarow-c1be5e135b70/angular/app/userpage/user.routing.ts"],"sourceRoot":"webpack:///"}